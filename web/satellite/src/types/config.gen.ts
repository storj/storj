// AUTOGENERATED BY configgen.go
// DO NOT EDIT.

import { MemorySize, Time } from '@/types/common';

export class AnnouncementConfig {
    enabled: boolean;
    name: string;
    title: string;
    body: string;
}

export class CaptchaConfig {
    login: MultiCaptchaConfig;
    registration: MultiCaptchaConfig;
}

export class FrontendConfig {
    externalAddress: string;
    satelliteName: string;
    satelliteNodeURL: string;
    stripePublicKey: string;
    partneredSatellites: PartneredSatellite[] | null;
    defaultProjectLimit: number;
    generalRequestURL: string;
    projectLimitsIncreaseRequestURL: string;
    gatewayCredentialsRequestURL: string;
    isBetaSatellite: boolean;
    betaSatelliteFeedbackURL: string;
    betaSatelliteSupportURL: string;
    documentationURL: string;
    couponCodeBillingUIEnabled: boolean;
    couponCodeSignupUIEnabled: boolean;
    fileBrowserFlowDisabled: boolean;
    linksharingURL: string;
    publicLinksharingURL: string;
    pathwayOverviewEnabled: boolean;
    captcha: CaptchaConfig;
    limitsAreaEnabled: boolean;
    defaultPaidStorageLimit: MemorySize;
    defaultPaidBandwidthLimit: MemorySize;
    inactivityTimerEnabled: boolean;
    inactivityTimerDuration: number;
    inactivityTimerViewerEnabled: boolean;
    optionalSignupSuccessURL: string;
    homepageURL: string;
    nativeTokenPaymentsEnabled: boolean;
    passwordMinimumLength: number;
    passwordMaximumLength: number;
    abTestingEnabled: boolean;
    pricingPackagesEnabled: boolean;
    galleryViewEnabled: boolean;
    neededTransactionConfirmations: number;
    billingFeaturesEnabled: boolean;
    unregisteredInviteEmailsEnabled: boolean;
    userBalanceForUpgrade: number;
    limitIncreaseRequestEnabled: boolean;
    signupActivationCodeEnabled: boolean;
    allowedUsageReportDateRange: number;
    enableRegionTag: boolean;
    emissionImpactViewEnabled: boolean;
    daysBeforeTrialEndNotification: number;
    analyticsEnabled: boolean;
    objectBrowserKeyNamePrefix: string;
    objectBrowserKeyLifetime: number;
    maxNameCharacters: number;
    billingInformationTabEnabled: boolean;
    satelliteManagedEncryptionEnabled: boolean;
    emailChangeFlowEnabled: boolean;
    selfServeAccountDeleteEnabled: boolean;
    deleteProjectEnabled: boolean;
    abbreviatedDeleteProjectEnabled: boolean;
    noLimitsUiEnabled: boolean;
    altObjBrowserPagingEnabled: boolean;
    altObjBrowserPagingThreshold: number;
    domainsPageEnabled: boolean;
    activeSessionsViewEnabled: boolean;
    versioningUIEnabled: boolean;
    objectLockUIEnabled: boolean;
    valdiSignUpURL: string;
    ssoEnabled: boolean;
    selfServePlacementSelectEnabled: boolean;
    cunoFSBetaEnabled: boolean;
    objectMountConsultationEnabled: boolean;
    csrfToken: string;
    billingAddFundsEnabled: boolean;
    billingStripeCheckoutEnabled: boolean;
    addCardAuthorizationEnabled: boolean;
    maxAddFundsAmount: number;
    minAddFundsAmount: number;
    downloadPrefixEnabled: boolean;
    zipDownloadLimit: number;
    restAPIKeysUIEnabled: boolean;
    liveCheckBadPasswords: boolean;
    zkSyncContractAddress: string;
    newDetailedUsageReportEnabled: boolean;
    minimumCharge: MinimumChargeConfig;
    storageMBMonthCents: string;
    egressMBCents: string;
    segmentMonthCents: string;
    newAccountSetupEnabled: boolean;
    upgradePayUpfrontAmount: number;
    userFeedbackEnabled: boolean;
    useGeneratedPrivateAPI: boolean;
    announcement: AnnouncementConfig;
}

export class MinimumChargeConfig {
    enabled: boolean;
    amount: number;
    startDate: Time | null;
}

export class MultiCaptchaConfig {
    recaptcha: SingleCaptchaConfig;
    hcaptcha: SingleCaptchaConfig;
}

export class PartneredSatellite {
    name: string;
    address: string;
}

export class SingleCaptchaConfig {
    enabled: boolean;
    siteKey: string;
}
